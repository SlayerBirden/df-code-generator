<?php
declare(strict_types=1);

namespace SlayerBirden\DFCodeGeneration\Generator\Factory;

use Nette\PhpGenerator\ClassType;
use Nette\PhpGenerator\Parameter;
use Nette\PhpGenerator\PhpFile;
use Nette\PhpGenerator\PsrPrinter;
use SlayerBirden\DFCodeGeneration\Generator\DataProvider\DataProviderInterface;
use SlayerBirden\DFCodeGeneration\Generator\GeneratorInterface;
use Twig\Environment;
use Twig\Loader\FilesystemLoader;

final class InputFilterMiddlewareFactoryGenerator implements GeneratorInterface
{
    /**
     * @var DataProviderInterface
     */
    private $dataProvider;
    /**
     * @var Environment
     */
    private $twig;

    public function __construct(DataProviderInterface $dataProvider)
    {
        $this->dataProvider = $dataProvider;
        $loader = new FilesystemLoader(__DIR__ . '/Templates');
        $this->twig = new Environment($loader);
    }

    /**
     * @return string
     * @throws \Twig_Error_Loader
     * @throws \Twig_Error_Runtime
     * @throws \Twig_Error_Syntax
     */
    public function generate(): string
    {
        $file = new PhpFile();
        $file->setStrictTypes();
        $file->addComment('This file is generated by SlayerBirden\DFCodeGeneration');

        $namespace = $file->addNamespace($this->getFactoryNamespace());
        $namespace->addUse(\Interop\Container\ContainerInterface::class);
        $namespace->addUse('SlayerBirden\DataFlowServer\Zend\InputFilter\Middleware\InputFilterMiddleware');
        $namespace->addUse(\Zend\ServiceManager\Factory\FactoryInterface::class);

        $class = $namespace->addClass($this->getShortClassName());

        $class->addImplement(\Zend\ServiceManager\Factory\FactoryInterface::class)
            ->setFinal()
            ->addMethod('__invoke')
            ->setParameters([
                (new Parameter('container'))->setTypeHint(\Interop\Container\ContainerInterface::class),
                (new Parameter('requestedName')),
                (new Parameter('options'))->setTypeHint('array')->setDefaultValue(null)
            ])
            ->setReturnType('SlayerBirden\DataFlowServer\Zend\InputFilter\Middleware\InputFilterMiddleware')
            ->setBody(
                $this->twig->load('InputFilterMiddlewareFactory/Invoke.template.twig')
                    ->render($this->dataProvider->provide())
            )
            ->setVisibility(ClassType::VISIBILITY_PUBLIC);

        return (new PsrPrinter())->printFile($file);
    }

    public function getClassName(): string
    {
        return $this->getFactoryNamespace() . '\\' . $this->getShortClassName();
    }

    public function getFileName(): string
    {
        return sprintf(
            'src/%s/Factory/%s.php',
            $this->dataProvider->provide()['moduleName'],
            $this->getShortClassName()
        );
    }

    /**
     * @return string
     */
    private function getShortClassName(): string
    {
        return 'InputFilterMiddlewareFactory';
    }

    /**
     * @return string
     */
    private function getFactoryNamespace(): string
    {
        return $this->dataProvider->provide()['factory_namespace'];
    }
}
