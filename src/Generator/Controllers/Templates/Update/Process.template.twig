$data = Parser::getRequestBody($request);
$entity = $request->getAttribute(ResourceMiddlewareInterface::DATA_RESOURCE);
try {
    $this->hydrator->hydrate($data, $entity);
    $em = $this->managerRegistry->getManagerForClass(DbConfiguration::class);
    $em->persist($entity);
    $em->flush();
    $msg = '{{ entityClassName }} has been updated!';
    return (new ResponseFactory())($msg, 200, '{{ refName }}', $this->hydrator->extract($entity));
} catch (ORMInvalidArgumentException | ValidationException $exception) {
    return (new ResponseFactory())($exception->getMessage(), 400, '{{ refName }}');
{% if hasUnique %}
} catch (UniqueConstraintViolationException $exception) {
    return (new ResponseFactory())('{{ uniqueIdxMessage }}', 400, '{{ refName }}');
{% endif %}
} catch (ORMException $exception) {
    $this->logger->error((string)$exception);
    return (new ResponseFactory())('Error while updating {{ refName }}.', 400, '{{ refName }}');
}
